{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based on the region in which the stack is run. This example creates an EC2 security group for the instance to give you SSH access. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",

    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "AnalyticslabKey",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },

        "InstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge" ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },

        "SSHLocation": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }

    },

    "Mappings": {
        "AWSInstanceType2Arch": {
            "t1.micro": { "Arch": "PV64" },
            "t2.nano": { "Arch": "HVM64" },
            "t2.micro": { "Arch": "HVM64" },
            "t2.small": { "Arch": "HVM64" },
            "t2.medium": { "Arch": "HVM64" },
            "t2.large": { "Arch": "HVM64" },
            "m1.small": { "Arch": "PV64" },
            "m1.medium": { "Arch": "PV64" },
            "m1.large": { "Arch": "PV64" },
            "m1.xlarge": { "Arch": "PV64" },
            "m2.xlarge": { "Arch": "PV64" },
            "m2.2xlarge": { "Arch": "PV64" },
            "m2.4xlarge": { "Arch": "PV64" },
            "m3.medium": { "Arch": "HVM64" },
            "m3.large": { "Arch": "HVM64" },
            "m3.xlarge": { "Arch": "HVM64" },
            "m3.2xlarge": { "Arch": "HVM64" },
            "m4.large": { "Arch": "HVM64" },
            "m4.xlarge": { "Arch": "HVM64" },
            "m4.2xlarge": { "Arch": "HVM64" },
            "m4.4xlarge": { "Arch": "HVM64" },
            "m4.10xlarge": { "Arch": "HVM64" },
            "c1.medium": { "Arch": "PV64" },
            "c1.xlarge": { "Arch": "PV64" },
            "c3.large": { "Arch": "HVM64" },
            "c3.xlarge": { "Arch": "HVM64" },
            "c3.2xlarge": { "Arch": "HVM64" },
            "c3.4xlarge": { "Arch": "HVM64" },
            "c3.8xlarge": { "Arch": "HVM64" },
            "c4.large": { "Arch": "HVM64" },
            "c4.xlarge": { "Arch": "HVM64" },
            "c4.2xlarge": { "Arch": "HVM64" },
            "c4.4xlarge": { "Arch": "HVM64" },
            "c4.8xlarge": { "Arch": "HVM64" },
            "g2.2xlarge": { "Arch": "HVMG2" },
            "g2.8xlarge": { "Arch": "HVMG2" },
            "r3.large": { "Arch": "HVM64" },
            "r3.xlarge": { "Arch": "HVM64" },
            "r3.2xlarge": { "Arch": "HVM64" },
            "r3.4xlarge": { "Arch": "HVM64" },
            "r3.8xlarge": { "Arch": "HVM64" },
            "i2.xlarge": { "Arch": "HVM64" },
            "i2.2xlarge": { "Arch": "HVM64" },
            "i2.4xlarge": { "Arch": "HVM64" },
            "i2.8xlarge": { "Arch": "HVM64" },
            "d2.xlarge": { "Arch": "HVM64" },
            "d2.2xlarge": { "Arch": "HVM64" },
            "d2.4xlarge": { "Arch": "HVM64" },
            "d2.8xlarge": { "Arch": "HVM64" },
            "hi1.4xlarge": { "Arch": "HVM64" },
            "hs1.8xlarge": { "Arch": "HVM64" },
            "cr1.8xlarge": { "Arch": "HVM64" },
            "cc2.8xlarge": { "Arch": "HVM64" }
        },

        "AWSInstanceType2NATArch": {
            "t1.micro": { "Arch": "NATPV64" },
            "t2.nano": { "Arch": "NATHVM64" },
            "t2.micro": { "Arch": "NATHVM64" },
            "t2.small": { "Arch": "NATHVM64" },
            "t2.medium": { "Arch": "NATHVM64" },
            "t2.large": { "Arch": "NATHVM64" },
            "m1.small": { "Arch": "NATPV64" },
            "m1.medium": { "Arch": "NATPV64" },
            "m1.large": { "Arch": "NATPV64" },
            "m1.xlarge": { "Arch": "NATPV64" },
            "m2.xlarge": { "Arch": "NATPV64" },
            "m2.2xlarge": { "Arch": "NATPV64" },
            "m2.4xlarge": { "Arch": "NATPV64" },
            "m3.medium": { "Arch": "NATHVM64" },
            "m3.large": { "Arch": "NATHVM64" },
            "m3.xlarge": { "Arch": "NATHVM64" },
            "m3.2xlarge": { "Arch": "NATHVM64" },
            "m4.large": { "Arch": "NATHVM64" },
            "m4.xlarge": { "Arch": "NATHVM64" },
            "m4.2xlarge": { "Arch": "NATHVM64" },
            "m4.4xlarge": { "Arch": "NATHVM64" },
            "m4.10xlarge": { "Arch": "NATHVM64" },
            "c1.medium": { "Arch": "NATPV64" },
            "c1.xlarge": { "Arch": "NATPV64" },
            "c3.large": { "Arch": "NATHVM64" },
            "c3.xlarge": { "Arch": "NATHVM64" },
            "c3.2xlarge": { "Arch": "NATHVM64" },
            "c3.4xlarge": { "Arch": "NATHVM64" },
            "c3.8xlarge": { "Arch": "NATHVM64" },
            "c4.large": { "Arch": "NATHVM64" },
            "c4.xlarge": { "Arch": "NATHVM64" },
            "c4.2xlarge": { "Arch": "NATHVM64" },
            "c4.4xlarge": { "Arch": "NATHVM64" },
            "c4.8xlarge": { "Arch": "NATHVM64" },
            "g2.2xlarge": { "Arch": "NATHVMG2" },
            "g2.8xlarge": { "Arch": "NATHVMG2" },
            "r3.large": { "Arch": "NATHVM64" },
            "r3.xlarge": { "Arch": "NATHVM64" },
            "r3.2xlarge": { "Arch": "NATHVM64" },
            "r3.4xlarge": { "Arch": "NATHVM64" },
            "r3.8xlarge": { "Arch": "NATHVM64" },
            "i2.xlarge": { "Arch": "NATHVM64" },
            "i2.2xlarge": { "Arch": "NATHVM64" },
            "i2.4xlarge": { "Arch": "NATHVM64" },
            "i2.8xlarge": { "Arch": "NATHVM64" },
            "d2.xlarge": { "Arch": "NATHVM64" },
            "d2.2xlarge": { "Arch": "NATHVM64" },
            "d2.4xlarge": { "Arch": "NATHVM64" },
            "d2.8xlarge": { "Arch": "NATHVM64" },
            "hi1.4xlarge": { "Arch": "NATHVM64" },
            "hs1.8xlarge": { "Arch": "NATHVM64" },
            "cr1.8xlarge": { "Arch": "NATHVM64" },
            "cc2.8xlarge": { "Arch": "NATHVM64" }
        },
        "AWSRegionArch2AMI": {
            "us-east-1": { "PV64": "ami-2a69aa47", "HVM64": "ami-6869aa05", "HVMG2": "ami-1f12e965" },
            "us-west-2": { "PV64": "ami-7f77b31f", "HVM64": "ami-7172b611", "HVMG2": "ami-5c9b6124" },
            "us-west-1": { "PV64": "ami-a2490dc2", "HVM64": "ami-31490d51", "HVMG2": "ami-7291a112" },
            "eu-west-1": { "PV64": "ami-4cdd453f", "HVM64": "ami-f9dd458a", "HVMG2": "ami-b411c5cd" },
            "eu-west-2": { "PV64": "NOT_SUPPORTED", "HVM64": "ami-886369ec", "HVMG2": "NOT_SUPPORTED" },
            "eu-central-1": { "PV64": "ami-6527cf0a", "HVM64": "ami-ea26ce85", "HVMG2": "ami-be40f2d1" },
            "ap-northeast-1": { "PV64": "ami-3e42b65f", "HVM64": "ami-374db956", "HVMG2": "ami-3efd2c58" },
            "ap-northeast-2": { "PV64": "NOT_SUPPORTED", "HVM64": "ami-2b408b45", "HVMG2": "NOT_SUPPORTED" },
            "ap-southeast-1": { "PV64": "ami-df9e4cbc", "HVM64": "ami-a59b49c6", "HVMG2": "ami-3e91ed5d" },
            "ap-southeast-2": { "PV64": "ami-63351d00", "HVM64": "ami-dc361ebf", "HVMG2": "ami-84a142e6" },
            "ap-south-1": { "PV64": "NOT_SUPPORTED", "HVM64": "ami-ffbdd790", "HVMG2": "ami-25ffbe4a" },
            "us-east-2": { "PV64": "NOT_SUPPORTED", "HVM64": "ami-f6035893", "HVMG2": "NOT_SUPPORTED" },
            "ca-central-1": { "PV64": "NOT_SUPPORTED", "HVM64": "ami-730ebd17", "HVMG2": "NOT_SUPPORTED" },
            "sa-east-1": { "PV64": "ami-1ad34676", "HVM64": "ami-6dd04501", "HVMG2": "NOT_SUPPORTED" },
            "cn-north-1": { "PV64": "ami-77559f1a", "HVM64": "ami-8e6aa0e3", "HVMG2": "NOT_SUPPORTED" },
            "cn-northwest-1": { "PV64": "ami-80707be2", "HVM64": "ami-cb858fa9", "HVMG2": "NOT_SUPPORTED" }
        }

    },

    "Resources": {
        "EC2Instance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "Comment01": "Install apps",
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "Install": [ "Install" ]
                    },

                    "Install": {
                        "packages": {
                            "yum": {
                                "R": [ ],
                                "git": [ ],
                                "python36": [ "3.6.2" ]
                            },
                            "rpm": {
                                "rstudio": "https://download2.rstudio.org/rstudio-server-rhel-1.1.383-x86_64.rpm",
                                "redshiftdriver": "https://s3.amazonaws.com/redshift-downloads/drivers/AmazonRedshiftODBC-64bit-1.3.7.1000-1.x86_64.rpm",
                                "scala": "https://downloads.lightbend.com/scala/2.12.4/scala-2.12.4.rpm"
                            }
                        },
                        "commands": {
                            "cmd00": {
                                "command": "pip install awscli"
                            },
                            "cmd01": {
                                "command": "aws s3 cp s3://script001/jdk-9.0.4_linux-x64_bin.rpm /tmp/jdk-9.0.4_linux-x64_bin.rpm"
                            },
                            "cmd02": {
                                "command": "rpm -i /tmp/jdk-9.0.4_linux-x64_bin.rpm"
                            },
                            "cmd03": {
                                "command": "aws s3 cp s3://script001//spark-2.2.0-bin-hadoop2.7.tgz /tmp/spark-2.2.0-bin-hadoop2.7.tgz"
                            },
                            "cmd04": {
                                "command": "tar -xzf /tmp/spark-2.2.0-bin-hadoop2.7.tgz -C /opt/"
                            },
                            "cmd05": {
                                "command": " ln -s /opt/spark-2.2.0-bin-hadoop2.7 /opt/spark"
                            },
                            "cmd06": {
                                "command": "unlink /etc/alternatives/python ; ln -s /usr/bin/python3.6 /etc/alternatives/python"
                            },
                            "cmd07": {
                                "command": "/usr/lib/rstudio-server/bin/rserver; aws s3 cp s3://script001/rstudio-server.conf /etc/init/rstudio-server.conf"
                            },
                            "cmd08": {
                                "command": "yum -y install nodejs npm --enablerepo=epel; /usr/bin/python3.6 -m pip install jupyter jupyterhub notebook pyspark jupyter_client==4.4.0 toree; npm install -g configurable-http-proxy "
                            },
                            "cmd09": {
                                "command": "mkdir /etc/jupyterhub/ ;cd /etc/jupyterhub/ ; /usr/local/bin/jupyterhub --generate-config; useradd jupyterhubadmin; echo \"Welcome@12345\" | passwd jupyterhubadmin --stdin; ln -s /usr/local/bin/jupyterhub-singleuser /usr/bin/jupyterhub-singleuser"
                            },
                            "cmd10": {
                                "command": "aws s3 cp s3://script001/jupyterhub_config.py /etc/jupyterhub/jupyterhub_config.py; aws s3 cp s3://script001/jupyterhub /etc/init.d/jupyterhub ; chmod +x /etc/init.d/jupyterhub; /etc/init.d/jupyterhub start; chkconfig --add jupyterhub"
                            },
                            "cmd11": {
                                "command": "yum -y install java-1.8.0*; aws s3 cp s3://script001/varaibles /tmp/varaibles; cat /tmp/varaibles >> /etc/bashrc; export SPARK_HOME=/opt/spark; /usr/local/bin/jupyter toree install --spark_home=$SPARK_HOME; /usr/local/bin/jupyter toree install --interpreters=PySpark"
                            },
                            "cmd12": {
                                "command": "aws s3 cp s3://script001/py3.6.sh /tmp/py3.6.sh ; sh /tmp/py3.6.sh"
                            },
                            "cmd13": {
                                "command": "sed -i -e 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config"
                            },
                            "cmd14": {
                                "command": "aws s3 cp s3://script001/log4j.properties /opt/spark/conf/log4j.properties; aws s3 cp s3://script001/spark-env.sh /opt/spark/conf/spark-env.sh; aws s3 cp s3://script001/spark-defaults.conf /opt/spark/conf/spark-defaults.conf"
                            },
                            "cmd15": {
                                "command": "aws s3 cp s3://script001/R_Py_modules.sh /tmp/R_Py_modules.sh; sh /tmp/R_Py_modules.sh"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "InstanceType": { "Ref": "InstanceType" },
                "SecurityGroups": [ { "Ref": "InstanceSecurityGroup" } ],
                "IamInstanceProfile": "analyticslab_m_poc_vm_role",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "VolumeType": "io1",
                            "Iops": "300",
                            "DeleteOnTermination": "true",
                            "VolumeSize": "100"
                        }
                    }
                ],
                "KeyName": { "Ref": "KeyName" },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                { "Ref": "AWS::StackName" },
                                "         --resource EC2Instance",
                                "         --configsets Install ",
                                "         --region ",
                                { "Ref": "AWS::Region" },
                                "\n"
                            ]
                        ]
                    }
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        { "Ref": "AWS::Region" },
                        { "Fn::FindInMap": [ "AWSInstanceType2Arch", { "Ref": "InstanceType" }, "Arch" ] }
                    ]
                },
                "Tags": [
                    { "Key": "Name", "Value": "AnalyticsLabVM_new" },
                    { "Key": "Owner", "Value": "ronson.blossom@xe04.ry.com" }
                ]
            }
        },

        "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH access via port 22",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": { "Ref": "SSHLocation" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8000",
                        "ToPort": "8000",
                        "CidrIp": { "Ref": "SSHLocation" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8998",
                        "ToPort": "8998",
                        "CidrIp": { "Ref": "SSHLocation" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "18080",
                        "ToPort": "18080",
                        "CidrIp": { "Ref": "SSHLocation" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8787",
                        "ToPort": "8787",
                        "CidrIp": { "Ref": "SSHLocation" }
                    }
                ]
            }
        }
    },

  "Outputs" : {
    "InstanceId" : {
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "EC2Instance" }
    },
    "AZ" : {
      "Description" : "Availability Zone of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "EC2Instance", "AvailabilityZone" ] }
    },
    "PublicDNS" : {
      "Description" : "Public DNSName of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PublicDnsName" ] }
    },
    "PublicIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PublicIp" ] }
    }
  }
}
